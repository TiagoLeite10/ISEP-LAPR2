@startuml
autonumber

title
<u>SD_SELECT_VC</u>
end title

actor "Nurse" as N

participant ":\nNurseUI" as AUI
participant ":\nSelectVaccinationCenterUI" as SVCUI
participant ":\nSelectVaccinationCenterController" as CTRL
participant ":\nCompany" as CMP
participant "vcStore:\n VaccinationCenterStore" as VCS
participant "vcMapper:\n VaccinationCenterMapper" as VCM
participant "listVC:\n List<VaccinationCenter>"  as LVC
participant "listVCDto:\n List<VaccinationCenterDto>"  as LVCD
participant "vc:\n VaccinationCenter" as VC
participant "vcDto:\n VaccinationCenterDto" as VCD

activate AUI
AUI -> SVCUI** : create()
note left: after a successed login
AUI -> SVCUI : run()

activate SVCUI
SVCUI --> CTRL : listVCDto = getVaccinationCenterList()
activate CTRL
CTRL -> CMP : vcStore = getVaccinationCenterStore()
activate CMP
deactivate CMP

CTRL -> VCS : listVC = getVaccinationCenterList()
activate VCS
deactivate VCS
CTRL -> VCM : listVCDto = listVcDto(listVC)
activate VCM
VCM --> LVCD** : create()

loop foreach object in listCV

VCM -> LVC : sv = get(i)
activate LVC
deactivate LVC

VCM -> VC : id = getId()
activate VC
deactivate VC

VCM -> VC : name = getName()
activate VC
deactivate VC

VCM -> VC : phoneNumber = getPhoneNumber()
activate VC
deactivate VC

VCM -> VC : email = getEmail()
activate VC
deactivate VC

VCM --> VCD** : create(id, name, phoneNumber, email)

VCM -> LVCD : add(vcDto)
activate LVCD
deactivate LVCD

end loop
CTRL <-- VCM : listVCDto
deactivate VCM

SVCUI <-- CTRL : listVCDto
deactivate CTRL



loop while an existing vaccination center is not selected
SVCUI --> N : shows vaccination centers and asks to select one
deactivate SVCUI
activate N

N -> SVCUI : select one vaccination center
activate SVCUI
SVCUI -> CTRL : b = existsVaccinationCenter(vcId)
activate CTRL

CTRL -> VCS : b = existsVaccinationCenter(vcId)
activate VCS
deactivate CTRL
deactivate VCS
end loop

SVCUI --> AUI :
deactivate SVCUI

AUI -> SVCUI : vcId = getSelectedVCId()
activate SVCUI
deactivate N
deactivate SVCUI

@enduml